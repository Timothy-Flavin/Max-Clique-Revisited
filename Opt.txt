--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 77, Column: 17 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 77, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 77, Column: 17 }
Function:        int_in
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 77, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 85, Column: 3 }
Function:        print_genome
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 89, Column: 3 }
Function:        print_genome
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 87, Column: 5 }
Function:        print_genome
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 93, Column: 3 }
Function:        print_genome
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 91, Column: 5 }
Function:        print_genome
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 86, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 86, Column: 21 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 85, Column: 94 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 85, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 87, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 85, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 86, Column: 21 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 87, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 89, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 91, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 89, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
Function:        print_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 91, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 86, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 96, Column: 3 }
Function:        print_adj_matrix
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
Function:        print_adj_matrix
Args:            
  - Callee:          putchar
  - String:          ' will not be inlined into '
  - Caller:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 102, Column: 5 }
Function:        print_adj_matrix
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
Function:        print_adj_matrix
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 100, Column: 30 }
Function:        print_adj_matrix
Args:            
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: GA.c, Line: 100, Column: 30 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
Function:        print_adj_matrix
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
Function:        print_adj_matrix
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 99, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        print_adj_matrix
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        randf
Args:            
  - Callee:          rand
  - String:          ' will not be inlined into '
  - Caller:          randf
    DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        randi
Args:            
  - Callee:          rand
  - String:          ' will not be inlined into '
  - Caller:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        random_genome
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 260, Column: 20 }
Function:        random_genome
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        random_genome
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 268, Column: 11 }
Function:        random_genome
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' with cost='
  - Cost:            '0'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 272, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 272, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 262, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 262, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 262, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 262, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 264, Column: 17 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 264, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 264, Column: 17 }
Function:        random_genome
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 264, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 657, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 657, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 652, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 651, Column: 15 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 611, Column: 13 }
Function:        one_gene_exchange
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          one_gene_exchange
    DebugLoc:        { File: GA.c, Line: 610, Column: 0 }
  - String:          ' with cost='
  - Cost:            '0'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 612, Column: 12 }
Function:        one_gene_exchange
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          one_gene_exchange
    DebugLoc:        { File: GA.c, Line: 610, Column: 0 }
  - String:          ' with cost='
  - Cost:            '0'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 23 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 39 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 611, Column: 24 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 23 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 39 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 611, Column: 24 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        one_gene_exchange
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 286, Column: 20 }
Function:        random_genome_inplace
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_genome_inplace
    DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 287, Column: 24 }
Function:        random_genome_inplace
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_genome_inplace
    DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 295, Column: 11 }
Function:        random_genome_inplace
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          random_genome_inplace
    DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
  - String:          ' with cost='
  - Cost:            '0'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 299, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 299, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 299, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 287, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 289, Column: 27 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 287, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 299, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 287, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 287, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 289, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
Function:        random_genome_inplace
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
Function:        random_genome_inplace
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 308, Column: 28 }
Function:        random_population
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 310, Column: 5 }
Function:        random_population
Args:            
  - Callee:          random_genome_inplace
    DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
  - String:          ' inlined into '
  - Caller:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' with cost='
  - Cost:            '210'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_population
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 310, Column: 35 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 310, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 286, Column: 27 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 286, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 286, Column: 29 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            shl
    DebugLoc:        { File: GA.c, Line: 286, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 287, Column: 31 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 287, Column: 31 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 288, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 291, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_population
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 310, Column: 35 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 310, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
Function:        random_population
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 309, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 663, Column: 18 }
Function:        generate_graph
Args:            
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          generate_graph
    DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 671, Column: 15 }
Function:        generate_graph
Args:            
  - Callee:          randf
    DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
  - String:          ' inlined into '
  - Caller:          generate_graph
    DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
  - String:          ' with cost='
  - Cost:            '15'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 667, Column: 11 }
Function:        generate_graph
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 667, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 668, Column: 18 }
Function:        generate_graph
Args:            
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: GA.c, Line: 668, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 672, Column: 18 }
Function:        generate_graph
Args:            
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: GA.c, Line: 672, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 665, Column: 17 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 665, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 665, Column: 17 }
Function:        generate_graph
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 665, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 682, Column: 16 }
Function:        row_sums
Args:            
  - Callee:          calloc
  - String:          ' will not be inlined into '
  - Caller:          row_sums
    DebugLoc:        { File: GA.c, Line: 681, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 685, Column: 28 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: GA.c, Line: 685, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 7 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
Function:        row_sums
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            PromoteLoopAccessesToScalar
DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
Function:        row_sums
Args:            
  - String:          Moving accesses to memory location out of the loop
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
Function:        row_sums
Args:            
  - String:          load eliminated by PRE
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 684, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 120, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 122, Column: 25 }
Function:        util_unit_tests
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 123, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 128, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 129, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 125, Column: 30 }
Function:        util_unit_tests
Args:            
  - Callee:          rand
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 126, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 133, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          putchar
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 135, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 141, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 145, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 150, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 158, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 161, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 154, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 167, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 169, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 171, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 174, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 163, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 179, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 177, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 139, Column: 23 }
Function:        util_unit_tests
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '185'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 140, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 142, Column: 23 }
Function:        util_unit_tests
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '185'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 143, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          copy_genome
    DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 144, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 146, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          one_gene_exchange
    DebugLoc:        { File: GA.c, Line: 610, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '175'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 147, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 151, Column: 26 }
Function:        util_unit_tests
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '220'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 153, Column: 24 }
Function:        util_unit_tests
Args:            
  - Callee:          randf
    DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '15'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 155, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 169, Column: 46 }
Function:        util_unit_tests
Args:            
  - Callee:          int_in
    DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '-15'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 169, Column: 68 }
Function:        util_unit_tests
Args:            
  - Callee:          int_in
    DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '-15'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 169, Column: 90 }
Function:        util_unit_tests
Args:            
  - Callee:          int_in
    DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '-15'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 169, Column: 113 }
Function:        util_unit_tests
Args:            
  - Callee:          int_in
    DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '-15'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 172, Column: 14 }
Function:        util_unit_tests
Args:            
  - Callee:          generate_graph
    DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '170'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 173, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '160'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 175, Column: 15 }
Function:        util_unit_tests
Args:            
  - Callee:          row_sums
    DebugLoc:        { File: GA.c, Line: 681, Column: 0 }
  - String:          ' inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' with cost='
  - Cost:            '60'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 164, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 140, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 144, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 147, Column: 3 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 155, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 164, Column: 5 }
Function:        util_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          util_unit_tests
    DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 164, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 164, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 153, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 153, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 125, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 125, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 125, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 125, Column: 5 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 176, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 99, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 97, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 665, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 162, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 152, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '10'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 264, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '10'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 264, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '10'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 130, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '10'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 124, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '10'
  - String:          ' iterations'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 129, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 279, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 611, Column: 24 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 145, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 39 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 129, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 131, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 125, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 131, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 279, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 611, Column: 24 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 145, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 612, Column: 39 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 627, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 640, Column: 6 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 628, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 98, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 177, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 337, Column: 22 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: GA.c, Line: 337, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 331, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 330, Column: 19 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 330, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 330, Column: 19 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 330, Column: 19 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 184, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 185, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 188, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' with cost='
  - Cost:            '160'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 198, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - Callee:          fitness
    DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
  - String:          ' inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' with cost='
  - Cost:            '95'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 199, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - Callee:          fitness
    DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
  - String:          ' inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' with cost='
  - Cost:            '95'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 200, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - Callee:          fitness
    DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
  - String:          ' inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' with cost='
  - Cost:            '95'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 202, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 203, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 204, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 202, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 203, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 204, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          fitness_unit_tests
    DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        fitness_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 330, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 330, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '4'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 330, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '3'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 99, Column: 5 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 97, Column: 3 }
Function:        fitness_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '2'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '2'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '3'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '0'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '2'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '1'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '3'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  '4'
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness_unit_tests
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  phi
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 447, Column: 13 }
Function:        order_1
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          order_1
    DebugLoc:        { File: GA.c, Line: 441, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 448, Column: 13 }
Function:        order_1
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          order_1
    DebugLoc:        { File: GA.c, Line: 441, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 469, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 469, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 470, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 470, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 477, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 477, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 502, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 540, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 478, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 505, Column: 35 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 527, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 465, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 466, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 468, Column: 19 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 468, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 468, Column: 19 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 468, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 464, Column: 19 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 464, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 464, Column: 19 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 464, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 476, Column: 17 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 476, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 476, Column: 17 }
Function:        order_1
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 476, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 209, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 218, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 226, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 219, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 220, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 224, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          order_1
    DebugLoc:        { File: GA.c, Line: 441, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '440'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 227, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 228, Column: 3 }
Function:        crossover_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          crossover_unit_test
    DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 568, Column: 19 }
Function:        roulette
Args:            
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          roulette
    DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 578, Column: 21 }
Function:        roulette
Args:            
  - Callee:          randf
    DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
  - String:          ' inlined into '
  - Caller:          roulette
    DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
  - String:          ' with cost='
  - Cost:            '15'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 28 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 583, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 583, Column: 12 }
Function:        roulette
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 583, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 587, Column: 19 }
Function:        roulette
Args:            
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: GA.c, Line: 587, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 572, Column: 16 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 572, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 28 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 583, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 577, Column: 17 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 577, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 577, Column: 17 }
Function:        roulette
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 577, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 571, Column: 17 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 571, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 571, Column: 17 }
Function:        roulette
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 571, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 232, Column: 3 }
Function:        roulette_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 235, Column: 3 }
Function:        roulette_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
Function:        roulette_unit_test
Args:            
  - Callee:          puts
  - String:          ' will not be inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 249, Column: 3 }
Function:        roulette_unit_test
Args:            
  - Callee:          putchar
  - String:          ' will not be inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 247, Column: 5 }
Function:        roulette_unit_test
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 236, Column: 3 }
Function:        roulette_unit_test
Args:            
  - Callee:          print_adj_matrix
    DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
  - String:          ' inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' with cost='
  - Cost:            '160'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 239, Column: 28 }
Function:        roulette_unit_test
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' with cost='
  - Cost:            '220'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 245, Column: 20 }
Function:        roulette_unit_test
Args:            
  - Callee:          roulette
    DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
  - String:          ' inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' with cost='
  - Cost:            '145'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 241, Column: 26 }
Function:        roulette_unit_test
Args:            
  - Callee:          fitness
    DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
  - String:          ' inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' with cost='
  - Cost:            '115'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 242, Column: 5 }
Function:        roulette_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 242, Column: 5 }
Function:        roulette_unit_test
Args:            
  - Callee:          print_genome
    DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          roulette_unit_test
    DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        roulette_unit_test
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 241, Column: 35 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 241, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 246, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '8'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '8'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 571, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '8'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '3'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 99, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 97, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '5'
  - String:          ' iterations'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 244, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            float
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 572, Column: 27 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 247, Column: 20 }
Function:        roulette_unit_test
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 589, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
Function:        roulette_unit_test
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        roulette_unit_test
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 320, Column: 3 }
Function:        free_population
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
Function:        free_population
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 318, Column: 5 }
Function:        free_population
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        free_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 10 }
Function:        free_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 317, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        free_population
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 316, Column: 17 }
Function:        free_population
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 316, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        free_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 316, Column: 17 }
Function:        free_population
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 316, Column: 17 }
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 358, Column: 21 }
Function:        single_point
Args:            
  - Callee:          randi
    DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
  - String:          ' inlined into '
  - Caller:          single_point
    DebugLoc:        { File: GA.c, Line: 352, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 419, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 419, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 405, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 405, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 366, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 20 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 388, Column: 19 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 392, Column: 20 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 391, Column: 19 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 402, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 401, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 406, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 395, Column: 37 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 405, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 416, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 415, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 420, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 409, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 419, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 366, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 389, Column: 20 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 388, Column: 19 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 389, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 392, Column: 20 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 391, Column: 19 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 402, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 401, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 416, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 420, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 367, Column: 23 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 392, Column: 40 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 406, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 395, Column: 37 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 405, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 416, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 415, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 402, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 406, Column: 42 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 420, Column: 22 }
Function:        single_point
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 409, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 419, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 416, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 402, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 394, Column: 27 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 394, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 420, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 419, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 419, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 406, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 405, Column: 7 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 405, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 405, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 419, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 394, Column: 27 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 394, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 401, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 415, Column: 12 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 387, Column: 17 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 387, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 387, Column: 17 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 387, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 365, Column: 17 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 365, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 365, Column: 17 }
Function:        single_point
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 365, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 600, Column: 3 }
Function:        rank
Args:            
  - Callee:          qsort
  - String:          ' will not be inlined into '
  - Caller:          rank
    DebugLoc:        { File: GA.c, Line: 599, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 606, Column: 10 }
Function:        rank
Args:            
  - Callee:          roulette
    DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
  - String:          ' inlined into '
  - Caller:          rank
    DebugLoc:        { File: GA.c, Line: 599, Column: 0 }
  - String:          ' with cost='
  - Cost:            '175'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 603, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 603, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 603, Column: 37 }
Function:        rank
Args:            
  - String:          'hoisting '
  - Inst:            sitofp
    DebugLoc:        { File: GA.c, Line: 603, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 601, Column: 17 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 601, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 603, Column: 26 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 603, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 601, Column: 17 }
Function:        rank
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 601, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
Function:        max_degree_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
Function:        max_degree_exchange
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
Function:        max_degree_exchange
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 643, Column: 22 }
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 693, Column: 18 }
Function:        run_GA
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 746, Column: 5 }
Function:        run_GA
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
Function:        run_GA
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 760, Column: 5 }
Function:        run_GA
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 763, Column: 5 }
Function:        run_GA
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 774, Column: 3 }
Function:        run_GA
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 696, Column: 31 }
Function:        run_GA
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
Function:        run_GA
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 709, Column: 31 }
Function:        run_GA
Args:            
  - Callee:          fitness
    DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '115'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 772, Column: 3 }
Function:        run_GA
Args:            
  - Callee:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '110'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 725, Column: 7 }
Function:        run_GA
Args:            
  - Callee:          copy_genome
    DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 742, Column: 5 }
Function:        run_GA
Args:            
  - Callee:          copy_genome
    DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 743, Column: 5 }
Function:        run_GA
Args:            
  - Callee:          copy_genome
    DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 771, Column: 3 }
Function:        run_GA
Args:            
  - Callee:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '110'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 748, Column: 10 }
Function:        run_GA
Args:            
  - Callee:          randf
    DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
  - String:          ' inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' with cost='
  - Cost:            '15'
  - String:          ' (threshold='
  - Threshold:       '375'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 696, Column: 31 }
Function:        run_GA
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
Function:        run_GA
Args:            
  - Callee:          random_population
    DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        run_GA
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 709, Column: 40 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 709, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 749, Column: 19 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 749, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 748, Column: 20 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            sitofp
    DebugLoc:        { File: GA.c, Line: 748, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 703, Column: 65 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 703, Column: 65 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            sitofp
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 652, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 651, Column: 15 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 652, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 651, Column: 15 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 652, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 651, Column: 15 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 757, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 697, Column: 31 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 728, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        run_GA
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        run_GA
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 711, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 711, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 708, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 747, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            zext
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
Function:        atoi
Args:            
  - Callee:          strtol
  - String:          ' will not be inlined into '
  - Caller:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 786, Column: 9 }
Function:        main
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 786, Column: 3 }
Function:        main
Args:            
  - Callee:          srand
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 809, Column: 3 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 829, Column: 18 }
Function:        main
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 830, Column: 17 }
Function:        main
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 834, Column: 37 }
Function:        main
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 835, Column: 5 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 836, Column: 5 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 837, Column: 5 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 842, Column: 7 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 843, Column: 7 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 844, Column: 7 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 849, Column: 14 }
Function:        main
Args:            
  - Callee:          time
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 854, Column: 3 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 861, Column: 3 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 863, Column: 14 }
Function:        main
Args:            
  - Callee:          fopen
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 867, Column: 3 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 870, Column: 3 }
Function:        main
Args:            
  - Callee:          sprintf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 872, Column: 3 }
Function:        main
Args:            
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 873, Column: 3 }
Function:        main
Args:            
  - Callee:          fputs
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 875, Column: 3 }
Function:        main
Args:            
  - Callee:          sprintf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 876, Column: 3 }
Function:        main
Args:            
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 877, Column: 3 }
Function:        main
Args:            
  - Callee:          fputs
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 879, Column: 3 }
Function:        main
Args:            
  - Callee:          sprintf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 880, Column: 3 }
Function:        main
Args:            
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 881, Column: 3 }
Function:        main
Args:            
  - Callee:          fputs
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 883, Column: 3 }
Function:        main
Args:            
  - Callee:          sprintf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 884, Column: 3 }
Function:        main
Args:            
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 885, Column: 3 }
Function:        main
Args:            
  - Callee:          fputs
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 887, Column: 3 }
Function:        main
Args:            
  - Callee:          sprintf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 888, Column: 3 }
Function:        main
Args:            
  - Callee:          fwrite
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 889, Column: 3 }
Function:        main
Args:            
  - Callee:          fputs
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 890, Column: 3 }
Function:        main
Args:            
  - Callee:          fputc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 892, Column: 3 }
Function:        main
Args:            
  - Callee:          fclose
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 897, Column: 3 }
Function:        main
Args:            
  - Callee:          printf
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 898, Column: 3 }
Function:        main
Args:            
  - Callee:          free
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: GA.c, Line: 865, Column: 5 }
Function:        main
Args:            
  - Callee:          fputc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 787, Column: 34 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 788, Column: 17 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 789, Column: 21 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 790, Column: 20 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 791, Column: 29 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 793, Column: 19 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 794, Column: 18 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 795, Column: 16 }
Function:        main
Args:            
  - Callee:          atoi
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 362, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '10'
  - String:          ' (threshold='
  - Threshold:       '487'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 823, Column: 14 }
Function:        main
Args:            
  - Callee:          generate_graph
    DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '195'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 824, Column: 12 }
Function:        main
Args:            
  - Callee:          row_sums
    DebugLoc:        { File: GA.c, Line: 681, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '75'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 831, Column: 32 }
Function:        main
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '200'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 832, Column: 30 }
Function:        main
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '200'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 838, Column: 17 }
Function:        main
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '220'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 840, Column: 15 }
Function:        main
Args:            
  - Callee:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '630'
  - String:          ', threshold='
  - Threshold:       '625'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 846, Column: 21 }
Function:        main
Args:            
  - Callee:          random_genome
    DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '220'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 847, Column: 7 }
Function:        main
Args:            
  - Callee:          copy_genome
    DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 895, Column: 3 }
Function:        main
Args:            
  - Callee:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: GA.c, Line: 896, Column: 3 }
Function:        main
Args:            
  - Callee:          free_population
    DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
  - String:          ' inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' with cost='
  - Cost:            '100'
  - String:          ' (threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: GA.c, Line: 840, Column: 15 }
Function:        main
Args:            
  - Callee:          run_GA
    DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          main
    DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
  - String:          ' because too costly to inline (cost='
  - Cost:            '630'
  - String:          ', threshold='
  - Threshold:       '625'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 261, Column: 3 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 261, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 840, Column: 22 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            fptosi
    DebugLoc:        { File: GA.c, Line: 840, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 261, Column: 3 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 261, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        main
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '1'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        main
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '1'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 264, Column: 3 }
Function:        main
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '2'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 264, Column: 3 }
Function:        main
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '2'
  - String:          ' iterations'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 787, Column: 39 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 786, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 788, Column: 22 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 789, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 790, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 791, Column: 34 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 793, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 794, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 795, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 834, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 835, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 842, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 843, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 279, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  call
    DebugLoc:        { File: GA.c, Line: 260, Column: 20 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  bitcast
    DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 865, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 863, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 892, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 320, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 787, Column: 39 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 786, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 788, Column: 22 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 789, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 790, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 791, Column: 34 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 793, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 794, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 795, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 834, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 835, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 842, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 843, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 279, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 865, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 863, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 892, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 320, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 787, Column: 39 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 786, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 788, Column: 22 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 789, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 790, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 791, Column: 34 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 793, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 794, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 795, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 834, Column: 37 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 835, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 842, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 843, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 651, Column: 20 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 278, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 652, Column: 26 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 279, Column: 23 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: GA.c, Line: 280, Column: 22 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i32*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 845, Column: 7 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 865, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 863, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 892, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 320, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: GA.c, Line: 318, Column: 17 }
Function:        main
Args:            
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 864, Column: 17 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 864, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 66, Column: 13 }
Function:        compare_floats
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 65, Column: 14 }
Function:        compare_floats
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 64, Column: 14 }
Function:        compare_floats
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 65, Column: 14 }
Function:        compare_floats
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 64, Column: 14 }
Function:        compare_floats
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 72, Column: 13 }
Function:        compare_genomes
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 71, Column: 36 }
Function:        compare_genomes
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 70, Column: 36 }
Function:        compare_genomes
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 71, Column: 36 }
Function:        compare_genomes
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 70, Column: 36 }
Function:        compare_genomes
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 77, Column: 3 }
Function:        int_in
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 77, Column: 3 }
Function:        int_in
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 77, Column: 21 }
Function:        int_in
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 77, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 77, Column: 3 }
Function:        int_in
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
Function:        int_in
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 78, Column: 8 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 87, Column: 5 }
Function:        print_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 86, Column: 3 }
Function:        print_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 86, Column: 3 }
Function:        print_genome
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 91, Column: 5 }
Function:        print_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 90, Column: 3 }
Function:        print_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 90, Column: 3 }
Function:        print_genome
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 90, Column: 33 }
Function:        print_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 90, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 90, Column: 33 }
Function:        print_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 90, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 86, Column: 27 }
Function:        print_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 86, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 86, Column: 27 }
Function:        print_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 86, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 90, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 91, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 91, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 90, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 86, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
Function:        print_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 87, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 87, Column: 22 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 86, Column: 21 }
Function:        print_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 100, Column: 7 }
Function:        print_adj_matrix
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 99, Column: 5 }
Function:        print_adj_matrix
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 99, Column: 5 }
Function:        print_adj_matrix
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 97, Column: 21 }
Function:        print_adj_matrix
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 99, Column: 23 }
Function:        print_adj_matrix
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 99, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
Function:        print_adj_matrix
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 100, Column: 21 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        randi
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: sub
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 629, Column: 7 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            UnsafeMemDep
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          'unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 674, Column: 7 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 674, Column: 7 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 683, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 685, Column: 16 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 683, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by analyzer
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 683, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 672, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 672, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 668, Column: 20 }
Function:        util_unit_tests
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
Function:        util_unit_tests
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        util_unit_tests
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        util_unit_tests
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        util_unit_tests
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        util_unit_tests
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        util_unit_tests
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '4'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '3'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '2'
  - String:          ' iterations'
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        util_unit_tests
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        util_unit_tests
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        random_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        random_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        random_genome
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
Function:        random_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        random_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        copy_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        copy_genome
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        copy_genome
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        copy_genome
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        copy_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        copy_genome
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        copy_genome
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        copy_genome
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 629, Column: 7 }
Function:        one_gene_exchange
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        one_gene_exchange
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        one_gene_exchange
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 620, Column: 3 }
Function:        one_gene_exchange
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
Function:        one_gene_exchange
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        one_gene_exchange
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 628, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
Function:        one_gene_exchange
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 628, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 624, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 12 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 628, Column: 25 }
Function:        one_gene_exchange
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        random_population
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_population
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_population
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        random_population
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_population
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_population
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 309, Column: 26 }
Function:        random_population
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 309, Column: 26 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
Function:        random_population
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 309, Column: 26 }
Function:        random_population
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 309, Column: 26 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
Function:        random_population
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        random_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            UnsafeMemDep
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        generate_graph
Args:            
  - String:          'loop not vectorized: '
  - String:          'unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        generate_graph
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 674, Column: 7 }
Function:        generate_graph
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        generate_graph
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        generate_graph
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        generate_graph
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 665, Column: 21 }
Function:        generate_graph
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 665, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
Function:        generate_graph
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 668, Column: 20 }
Function:        generate_graph
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
Function:        generate_graph
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 672, Column: 20 }
Function:        generate_graph
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        generate_graph
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 665, Column: 3 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        generate_graph
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        generate_graph
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
Function:        row_sums
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
Function:        row_sums
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: and
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            UnsupportedType
Function:        row_sums
Args:            
  - String:          'Cannot SLP vectorize list: type '
  - String:          '<4 x i32> is unsupported by vectorizer'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
Function:        row_sums
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        row_sums
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            sub
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        row_sums
Args:            
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 337, Column: 30 }
Function:        fitness
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
Function:        fitness
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        fitness
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        fitness
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            sub
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
Function:        fitness
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        fitness
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 476, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 476, Column: 3 }
Function:        order_1
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 500, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 500, Column: 3 }
Function:        order_1
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 522, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 522, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 522, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 522, Column: 3 }
Function:        order_1
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 535, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 535, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 535, Column: 3 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 535, Column: 3 }
Function:        order_1
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 464, Column: 5 }
Function:        order_1
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 464, Column: 5 }
Function:        order_1
Args:            
  - String:          loop not vectorized
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 24 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 468, Column: 24 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: or
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: or
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: or
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: or
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: or
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 464, Column: 23 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 464, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 500, Column: 25 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 500, Column: 25 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 500, Column: 3 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 451, Column: 6 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 476, Column: 21 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 476, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 451, Column: 6 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 447, Column: 13 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 451, Column: 6 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 447, Column: 13 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 447, Column: 13 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 447, Column: 13 }
Function:        order_1
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        order_1
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
  - String:          ' and '
  - Instruction2Opcode: add
    DebugLoc:        { File: GA.c, Line: 111, Column: 16 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 468, Column: 5 }
Function:        order_1
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 464, Column: 5 }
Function:        order_1
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 476, Column: 3 }
Function:        order_1
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 470, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 469, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 466, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 465, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 465, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 37 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 466, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 539, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 536, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 536, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 536, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 539, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 526, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 523, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 523, Column: 37 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 27 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 523, Column: 47 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 526, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 505, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 504, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 502, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 501, Column: 21 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 501, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 502, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 31 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 504, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 505, Column: 10 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 478, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
Function:        order_1
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 477, Column: 7 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 477, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 478, Column: 12 }
Function:        order_1
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 577, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 577, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fsub
    DebugLoc:        { File: GA.c, Line: 584, Column: 15 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 578, Column: 29 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fmul
    DebugLoc:        { File: GA.c, Line: 578, Column: 29 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 578, Column: 29 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fmul
    DebugLoc:        { File: GA.c, Line: 578, Column: 29 }
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        roulette_unit_test
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: GA.c, Line: 577, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'completely unrolled loop with '
  - UnrollCount:     '8'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        roulette_unit_test
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        roulette_unit_test
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'hoisting '
  - Inst:            sub
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
Function:        roulette_unit_test
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        roulette_unit_test
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 291, Column: 3 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
Function:        roulette_unit_test
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 286, Column: 18 }
...
--- !AnalysisFPCommute
Pass:            loop-vectorize
Name:            CantReorderFPOps
DebugLoc:        { File: GA.c, Line: 572, Column: 13 }
Function:        roulette
Args:            
  - String:          'loop not vectorized: cannot prove it is safe to reorder floating-point operations'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 571, Column: 3 }
Function:        roulette
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by analyzer
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 577, Column: 21 }
Function:        roulette
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 577, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 585, Column: 7 }
Function:        roulette
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 585, Column: 7 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 568, Column: 26 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        roulette
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        roulette
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 571, Column: 21 }
Function:        roulette
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 571, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 571, Column: 3 }
Function:        roulette
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        roulette
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 288, Column: 3 }
Function:        random_genome_inplace
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 288, Column: 3 }
Function:        random_genome_inplace
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        random_genome_inplace
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 294, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
Function:        random_genome_inplace
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 291, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 288, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 288, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 288, Column: 3 }
Function:        random_genome_inplace
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 296, Column: 21 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 298, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 296, Column: 12 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 298, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
Function:        random_genome_inplace
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 289, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 289, Column: 14 }
Function:        random_genome_inplace
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
Function:        free_population
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        free_population
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        free_population
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
Function:        free_population
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        free_population
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 365, Column: 3 }
Function:        single_point
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 365, Column: 3 }
Function:        single_point
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantIdentifyArrayBounds
DebugLoc:        { File: GA.c, Line: 387, Column: 3 }
Function:        single_point
Args:            
  - String:          'loop not vectorized: '
  - String:          cannot identify array bounds
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 387, Column: 3 }
Function:        single_point
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 411, Column: 7 }
Function:        single_point
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 411, Column: 7 }
Function:        single_point
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 397, Column: 7 }
Function:        single_point
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 397, Column: 7 }
Function:        single_point
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        single_point
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 394, Column: 32 }
Function:        single_point
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 394, Column: 32 }
  - String:          ' and '
  - Instruction2Opcode: sext
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        single_point
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        single_point
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 356, Column: 22 }
Function:        single_point
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
    DebugLoc:        { File: GA.c, Line: 356, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: fptosi
    DebugLoc:        { File: GA.c, Line: 358, Column: 21 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 387, Column: 31 }
Function:        single_point
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 387, Column: 31 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 365, Column: 21 }
Function:        single_point
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 365, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 365, Column: 3 }
Function:        single_point
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 398, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 398, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 412, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 412, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 415, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 401, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 409, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 395, Column: 22 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 27 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 395, Column: 47 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 23 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 409, Column: 43 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 392, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 391, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 389, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 388, Column: 21 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 388, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 389, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 31 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 391, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 392, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 367, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
Function:        single_point
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 366, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 366, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 367, Column: 10 }
Function:        single_point
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: GA.c, Line: 601, Column: 3 }
Function:        rank
Args:            
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 601, Column: 3 }
Function:        rank
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '1'
  - String:          ')'
...
--- !AnalysisFPCommute
Pass:            loop-vectorize
Name:            CantReorderFPOps
DebugLoc:        { File: GA.c, Line: 572, Column: 13 }
Function:        rank
Args:            
  - String:          'loop not vectorized: cannot prove it is safe to reorder floating-point operations'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 571, Column: 3 }
Function:        rank
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by analyzer
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 577, Column: 21 }
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 577, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 585, Column: 7 }
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 585, Column: 7 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 600, Column: 18 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: load
    DebugLoc:        { File: GA.c, Line: 583, Column: 39 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 571, Column: 21 }
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 571, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 601, Column: 3 }
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: and
    DebugLoc:        { File: GA.c, Line: 601, Column: 3 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 603, Column: 28 }
Function:        rank
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 603, Column: 28 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 601, Column: 3 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 571, Column: 3 }
Function:        rank
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 583, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 589, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 603, Column: 26 }
Function:        rank
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 603, Column: 26 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 750, Column: 7 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 747, Column: 5 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 747, Column: 5 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 732, Column: 7 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 730, Column: 5 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 730, Column: 5 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 337, Column: 30 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 317, Column: 5 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        run_GA
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 316, Column: 3 }
Function:        run_GA
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 316, Column: 26 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        run_GA
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 703, Column: 38 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: icmp
    DebugLoc:        { File: GA.c, Line: 703, Column: 38 }
  - String:          ' and '
  - Instruction2Opcode: fcmp
    DebugLoc:        { File: GA.c, Line: 703, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 747, Column: 28 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 747, Column: 28 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 108, Column: 30 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fmul
    DebugLoc:        { File: GA.c, Line: 108, Column: 30 }
  - String:          ' and '
  - Instruction2Opcode: sitofp
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
Function:        run_GA
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        run_GA
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 330, Column: 29 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        run_GA
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        run_GA
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 703, Column: 55 }
Function:        run_GA
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: sub
    DebugLoc:        { File: GA.c, Line: 703, Column: 55 }
  - String:          ' and '
  - Instruction2Opcode: sext
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 317, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        run_GA
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        run_GA
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 337, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 331, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            sub
    DebugLoc:        { File: GA.c, Line: 335, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
Function:        run_GA
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 336, Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: GA.c, Line: 337, Column: 36 }
Function:        run_GA
Args:            
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 711, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 711, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            trunc
    DebugLoc:        { File: GA.c, Line: 730, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 44 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 732, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 732, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 653, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 30 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 654, Column: 12 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 653, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 656, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 656, Column: 21 }
Function:        run_GA
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 746, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 652, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 651, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        run_GA
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Analysis
Pass:            loop-vectorize
Name:            UnsafeMemDep
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          'unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop'
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NoCFGForSelect
DebugLoc:        { File: GA.c, Line: 674, Column: 7 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          control flow cannot be substituted for a select
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        main
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '4'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Passed
Pass:            loop-vectorize
Name:            Vectorized
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        main
Args:            
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: '16'
  - String:          ', interleaved count: '
  - InterleaveCount: '2'
  - String:          ')'
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 112, Column: 10 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 267, Column: 5 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantVectorizeCall
DebugLoc:        { File: GA.c, Line: 865, Column: 5 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          call instruction cannot be vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonSimpleLoad
DebugLoc:        { File: GA.c, Line: 864, Column: 3 }
Function:        main
Args:            
  - String:          'loop not vectorized: '
  - String:          read with atomic ordering or volatile read
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: GA.c, Line: 864, Column: 3 }
Function:        main
Args:            
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 864, Column: 30 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 864, Column: 30 }
  - String:          ' and '
  - Instruction2Opcode: and
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: and
    DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
  - String:          ' and '
  - Instruction2Opcode: sext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 656, Column: 27 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
  - String:          ' and '
  - Instruction2Opcode: bitcast
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
  - String:          ' and '
  - Instruction2Opcode: bitcast
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
  - String:          ' and '
  - Instruction2Opcode: bitcast
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: and
    DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
  - String:          ' and '
  - Instruction2Opcode: sext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 653, Column: 33 }
  - String:          ' and '
  - Instruction2Opcode: and
    DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: load
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 260, Column: 20 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: call
    DebugLoc:        { File: GA.c, Line: 260, Column: 20 }
  - String:          ' and '
  - Instruction2Opcode: getelementptr
    DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 264, Column: 22 }
  - String:          ' and '
  - Instruction2Opcode: zext
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: /usr/include/stdlib.h, Line: 363, Column: 10 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 683, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: and
...
--- !Missed
Pass:            slp-vectorizer
Name:            UnsupportedType
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: type '
  - String:          '<4 x i32> is unsupported by vectorizer'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 685, Column: 30 }
  - String:          ' and '
  - Instruction2Opcode: sub
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 665, Column: 21 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 665, Column: 21 }
  - String:          ' and '
  - Instruction2Opcode: and
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 668, Column: 20 }
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: add
    DebugLoc:        { File: GA.c, Line: 666, Column: 23 }
  - String:          ' and '
  - Instruction2Opcode: phi
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: GA.c, Line: 672, Column: 20 }
Function:        main
Args:            
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
DebugLoc:        { File: GA.c, Line: 108, Column: 30 }
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: fmul
    DebugLoc:        { File: GA.c, Line: 108, Column: 30 }
  - String:          ' and '
  - Instruction2Opcode: fdiv
    DebugLoc:        { File: GA.c, Line: 791, Column: 44 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            InequableTypes
Function:        main
Args:            
  - String:          'Cannot SLP vectorize list: not all of the '
  - String:          'parts of scalar instructions are of the same type: '
  - Instruction1Opcode: phi
  - String:          ' and '
  - Instruction2Opcode: ashr
    DebugLoc:        { File: GA.c, Line: 665, Column: 3 }
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        main
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 653, Column: 3 }
Function:        main
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 656, Column: 3 }
Function:        main
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '4'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            loop-unroll
Name:            PartialUnrolled
DebugLoc:        { File: GA.c, Line: 666, Column: 5 }
Function:        main
Args:            
  - String:          'unrolled loop by a factor of '
  - UnrollCount:     '2'
  - String:          ' with run-time trip count'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 865, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: GA.c, Line: 865, Column: 24 }
Function:        main
Args:            
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 271, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 654, Column: 27 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 657, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            sext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 650, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 844, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 843, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 280, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 279, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 278, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 277, Column: 18 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 276, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 275, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            zext
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 259, Column: 14 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 836, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 269, Column: 12 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            bitcast
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 685, Column: 19 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            InstSunk
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            and
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            sub
    DebugLoc:        { File: GA.c, Line: 684, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        main
Args:            
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 673, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 672, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 669, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
Function:        main
Args:            
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: GA.c, Line: 668, Column: 9 }
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 63, Column: 0 }
Function:        compare_floats
Args:            
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 63, Column: 0 }
Function:        compare_floats
Args:            
  - NumInstructions: '10'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 69, Column: 0 }
Function:        compare_genomes
Args:            
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 69, Column: 0 }
Function:        compare_genomes
Args:            
  - NumInstructions: '10'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
Function:        int_in
Args:            
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 75, Column: 0 }
Function:        int_in
Args:            
  - NumInstructions: '41'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
Function:        print_genome
Args:            
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 84, Column: 0 }
Function:        print_genome
Args:            
  - NumInstructions: '45'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
Function:        print_adj_matrix
Args:            
  - NumStackBytes:   '40'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 95, Column: 0 }
Function:        print_adj_matrix
Args:            
  - NumInstructions: '39'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
Function:        randf
Args:            
  - NumStackBytes:   '8'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 107, Column: 0 }
Function:        randf
Args:            
  - NumInstructions: '7'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
Function:        randi
Args:            
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 110, Column: 0 }
Function:        randi
Args:            
  - NumInstructions: '15'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
Function:        util_unit_tests
Args:            
  - NumStackBytes:   '56'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 117, Column: 0 }
Function:        util_unit_tests
Args:            
  - NumInstructions: '1268'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
Function:        random_genome
Args:            
  - NumStackBytes:   '56'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 258, Column: 0 }
Function:        random_genome
Args:            
  - NumInstructions: '56'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
Function:        copy_genome
Args:            
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 649, Column: 0 }
Function:        copy_genome
Args:            
  - NumInstructions: '29'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 610, Column: 0 }
Function:        one_gene_exchange
Args:            
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 610, Column: 0 }
Function:        one_gene_exchange
Args:            
  - NumInstructions: '47'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 286, Column: 20 }
Function:        random_population
Args:            
  - NumSpills:       '1'
  - String:          ' spills '
  - NumReloads:      '6'
  - String:          ' reloads '
  - NumFoldedReloads: '2'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 286, Column: 20 }
Function:        random_population
Args:            
  - NumSpills:       '2'
  - String:          ' spills '
  - NumReloads:      '6'
  - String:          ' reloads '
  - NumFoldedReloads: '2'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
Function:        random_population
Args:            
  - NumStackBytes:   '104'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 307, Column: 0 }
Function:        random_population
Args:            
  - NumInstructions: '121'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        generate_graph
Args:            
  - NumReloads:      '1'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 665, Column: 3 }
Function:        generate_graph
Args:            
  - NumReloads:      '4'
  - String:          ' reloads '
  - NumFoldedReloads: '2'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
Function:        generate_graph
Args:            
  - NumStackBytes:   '104'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 662, Column: 0 }
Function:        generate_graph
Args:            
  - NumInstructions: '95'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 683, Column: 3 }
Function:        row_sums
Args:            
  - NumReloads:      '3'
  - String:          ' reloads '
  - NumFoldedReloads: '1'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 681, Column: 0 }
Function:        row_sums
Args:            
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 681, Column: 0 }
Function:        row_sums
Args:            
  - NumInstructions: '116'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
Function:        fitness_unit_tests
Args:            
  - NumStackBytes:   '200'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 183, Column: 0 }
Function:        fitness_unit_tests
Args:            
  - NumInstructions: '175'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 330, Column: 3 }
Function:        fitness
Args:            
  - NumReloads:      '1'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
Function:        fitness
Args:            
  - NumStackBytes:   '64'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 325, Column: 0 }
Function:        fitness
Args:            
  - NumInstructions: '84'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
Function:        crossover_unit_test
Args:            
  - NumStackBytes:   '248'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 207, Column: 0 }
Function:        crossover_unit_test
Args:            
  - NumInstructions: '70'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 441, Column: 0 }
Function:        order_1
Args:            
  - NumStackBytes:   '72'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 441, Column: 0 }
Function:        order_1
Args:            
  - NumInstructions: '341'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 241, Column: 35 }
Function:        roulette_unit_test
Args:            
  - NumSpills:       '4'
  - String:          ' spills '
  - NumReloads:      '9'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
Function:        roulette_unit_test
Args:            
  - NumStackBytes:   '88'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 231, Column: 0 }
Function:        roulette_unit_test
Args:            
  - NumInstructions: '689'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 577, Column: 3 }
Function:        roulette
Args:            
  - NumReloads:      '2'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
Function:        roulette
Args:            
  - NumStackBytes:   '56'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 567, Column: 0 }
Function:        roulette
Args:            
  - NumInstructions: '89'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
Function:        random_genome_inplace
Args:            
  - NumStackBytes:   '40'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 285, Column: 0 }
Function:        random_genome_inplace
Args:            
  - NumInstructions: '83'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
Function:        free_population
Args:            
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 315, Column: 0 }
Function:        free_population
Args:            
  - NumInstructions: '20'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 352, Column: 0 }
Function:        single_point
Args:            
  - NumStackBytes:   '56'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 352, Column: 0 }
Function:        single_point
Args:            
  - NumInstructions: '147'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 577, Column: 3 }
Function:        rank
Args:            
  - NumReloads:      '2'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 599, Column: 0 }
Function:        rank
Args:            
  - NumStackBytes:   '72'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 599, Column: 0 }
Function:        rank
Args:            
  - NumInstructions: '155'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 642, Column: 0 }
Function:        max_degree_exchange
Args:            
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 642, Column: 0 }
Function:        max_degree_exchange
Args:            
  - NumInstructions: '1'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 330, Column: 3 }
Function:        run_GA
Args:            
  - NumReloads:      '2'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 326, Column: 22 }
Function:        run_GA
Args:            
  - NumSpills:       '5'
  - String:          ' spills '
  - NumReloads:      '11'
  - String:          ' reloads '
  - NumFoldedReloads: '1'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 748, Column: 10 }
Function:        run_GA
Args:            
  - NumReloads:      '1'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 703, Column: 24 }
Function:        run_GA
Args:            
  - NumSpills:       '11'
  - String:          ' spills '
  - NumReloads:      '20'
  - String:          ' reloads '
  - NumFoldedReloads: '5'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
Function:        run_GA
Args:            
  - NumStackBytes:   '168'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 692, Column: 0 }
Function:        run_GA
Args:            
  - NumInstructions: '435'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 835, Column: 21 }
Function:        main
Args:            
  - NumSpills:       '3'
  - String:          ' spills '
  - NumReloads:      '10'
  - String:          ' reloads '
  - NumFoldedReloads: '6'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 108, Column: 18 }
Function:        main
Args:            
  - NumReloads:      '1'
  - String:          ' reloads '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReload
DebugLoc:        { File: GA.c, Line: 665, Column: 3 }
Function:        main
Args:            
  - NumFoldedSpills: '1'
  - String:          ' folded spills '
  - NumReloads:      '6'
  - String:          ' reloads '
  - NumFoldedReloads: '2'
  - String:          ' folded reloads '
  - String:          generated in loop
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
Function:        main
Args:            
  - NumStackBytes:   '472'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: GA.c, Line: 785, Column: 0 }
Function:        main
Args:            
  - NumInstructions: '781'
  - String:          ' instructions in function'
...
